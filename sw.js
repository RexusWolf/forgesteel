const a=self,r="forgesteel-v1",o=["/forgesteel/","/forgesteel/index.html","/forgesteel/manifest.json"];self.addEventListener("install",n=>{n.waitUntil(caches.open(r).then(s=>s.addAll(o)).then(()=>a.skipWaiting()).catch(s=>{console.error("Service Worker installation failed:",s)}))});self.addEventListener("activate",n=>{n.waitUntil(caches.keys().then(s=>Promise.all(s.filter(t=>t!==r).map(t=>caches.delete(t)))).then(()=>a.clients.claim()))});self.addEventListener("fetch",n=>{const e=n;e.request.method==="GET"&&e.request.url.startsWith("http")&&e.respondWith((async()=>{try{const s=await caches.match(e.request);if(s)return s;const t=await fetch(e.request);if(!t||t.status!==200||t.type!=="basic")return t;const c=t.clone();return e.request.url.includes("/forgesteel/")&&(await(await caches.open(r)).put(e.request,c),(await a.clients.matchAll()).forEach(i=>{i.postMessage({type:"CACHE_UPDATED",url:e.request.url})})),t}catch(s){if(console.error("Network request failed:",s),e.request.destination==="document"){const t=await caches.match("/forgesteel/index.html");if(t)return t}return new Response("Network error",{status:500})}})())});self.addEventListener("sync",n=>{n.tag});self.addEventListener("push",n=>{const e=n;if(e.data){const s=e.data.json(),t={body:s.body,icon:"/forgesteel/assets/shield.png",badge:"/forgesteel/assets/shield.png",data:{dateOfArrival:Date.now(),primaryKey:1}};e.waitUntil(a.registration.showNotification(s.title,t))}});
